{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "cbce318f",
   "metadata": {},
   "source": [
    "# 1. Basic Image Registration with Twocan\n",
    "\n",
    "This notebook demonstrates a basic image registration workflow using the `Twocan` library. We will register an example same-slide IF and IMC image using the default utilities:\n",
    "1. Preprocessors `IFprocessor` and `IMCprocessor`\n",
    "1. `RegEstimator` to get the transformation matrix\n",
    "1. `registation_trial` and `iou_corr_single_objective` which are designed for IF/IMC registration\n",
    "\n",
    "Custom functions can be provided in place of these defaults to register pairs of images of different technologies or experimental set ups (eg. serial sections) \n",
    "\n",
    "We will set the IF as the \"fixed\" or target image, and IMC as the \"moving\" or soruce image. \n",
    "\n",
    "# 1. A note on data formats\n",
    "# 1. Using callbacks (& other Optuna features)\n",
    "# 1. Custom trial & objectives\n",
    "# 1. Picking registration channels\n",
    "# 1. Rescaling for mismatched resolution\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7e2c617",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/harrigan/.conda/envs/twocan/lib/python3.9/site-packages/pyproj/__init__.py:95: UserWarning: pyproj unable to set database path.\n",
      "  _pyproj_global_context_initialize()\n",
      "/home/harrigan/.conda/envs/twocan/lib/python3.9/site-packages/numba/core/decorators.py:246: RuntimeWarning: nopython is set for njit and is ignored\n",
      "  warnings.warn('nopython is set for njit and is ignored', RuntimeWarning)\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from twocan import IFProcessor, IMCProcessor, RegEstimator, registration_trial, iou_corr_single_objective\n",
    "from twocan.utils import pick_best_registration \n",
    "from twocan.plotting import plot_registration\n",
    "import matplotlib.pyplot as plt\n",
    "from spatialdata import SpatialData, read_zarr\n",
    "import optuna"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "09d6b3be",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "os.chdir('/home/harrigan/repair-quant/twocan_repo/notebooks')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63e0db5f",
   "metadata": {},
   "source": [
    "## Load data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6089b5a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "sdata = read_zarr('examples/01_imc_if/data/cell-line-0028-bd18455.zarr')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26b06892-51df-49a6-8f03-f998ab2b9e51",
   "metadata": {},
   "source": [
    "Both the IF and IMC image are saved into this zarr, with their channel names. The IMC image has a transformation matrix in the 'aligned' coordinate system, and we will show how this matrix was found using Twocan.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1f67056e-2f8c-43b5-8c79-14b3ac756a61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;image&#x27; (c: 3, y: 512, x: 512)&gt; Size: 2MB\n",
       "dask.array&lt;from-zarr, shape=(3, 512, 512), dtype=uint16, chunksize=(3, 512, 512), chunktype=numpy.ndarray&gt;\n",
       "Coordinates:\n",
       "  * c        (c) &lt;U4 48B &#x27;DAPI&#x27; &#x27;GFP&#x27; &#x27;RFP&#x27;\n",
       "  * y        (y) float64 4kB 0.5 1.5 2.5 3.5 4.5 ... 508.5 509.5 510.5 511.5\n",
       "  * x        (x) float64 4kB 0.5 1.5 2.5 3.5 4.5 ... 508.5 509.5 510.5 511.5\n",
       "Attributes:\n",
       "    transform:  {&#x27;global&#x27;: Identity }</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'image'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>c</span>: 3</li><li><span class='xr-has-index'>y</span>: 512</li><li><span class='xr-has-index'>x</span>: 512</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-306299f6-8ed8-4c5d-a2cb-8341e15ab09e' class='xr-array-in' type='checkbox' checked><label for='section-306299f6-8ed8-4c5d-a2cb-8341e15ab09e' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(3, 512, 512), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 1.50 MiB </td>\n",
       "                        <td> 1.50 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (3, 512, 512) </td>\n",
       "                        <td> (3, 512, 512) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> uint16 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"194\" height=\"184\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"24\" y2=\"14\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"120\" x2=\"24\" y2=\"134\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"24\" y2=\"134\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 24.9485979497544,14.948597949754403 24.9485979497544,134.9485979497544 10.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"130\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"144\" y2=\"14\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"24\" y2=\"14\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"130\" y1=\"0\" x2=\"144\" y2=\"14\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 130.0,0.0 144.9485979497544,14.948597949754403 24.9485979497544,14.948597949754403\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"144\" y2=\"14\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"24\" y1=\"134\" x2=\"144\" y2=\"134\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"24\" y2=\"134\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"144\" y1=\"14\" x2=\"144\" y2=\"134\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"24.9485979497544,14.948597949754403 144.9485979497544,14.948597949754403 144.9485979497544,134.9485979497544 24.9485979497544,134.9485979497544\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"84.948598\" y=\"154.948598\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >512</text>\n",
       "  <text x=\"164.948598\" y=\"74.948598\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,164.948598,74.948598)\">512</text>\n",
       "  <text x=\"7.474299\" y=\"147.474299\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,7.474299,147.474299)\">3</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></div></li><li class='xr-section-item'><input id='section-25b424fb-97e5-490c-8261-ffe07cb55ea0' class='xr-section-summary-in' type='checkbox'  checked><label for='section-25b424fb-97e5-490c-8261-ffe07cb55ea0' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>c</span></div><div class='xr-var-dims'>(c)</div><div class='xr-var-dtype'>&lt;U4</div><div class='xr-var-preview xr-preview'>&#x27;DAPI&#x27; &#x27;GFP&#x27; &#x27;RFP&#x27;</div><input id='attrs-781488b0-3650-4123-ae7c-a2532fb2b2e8' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-781488b0-3650-4123-ae7c-a2532fb2b2e8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ff3b849e-9a0d-4ace-a939-a13666d8b869' class='xr-var-data-in' type='checkbox'><label for='data-ff3b849e-9a0d-4ace-a939-a13666d8b869' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;DAPI&#x27;, &#x27;GFP&#x27;, &#x27;RFP&#x27;], dtype=&#x27;&lt;U4&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 1.5 2.5 ... 509.5 510.5 511.5</div><input id='attrs-fb8f46f1-9a6a-4640-96a8-ebdfd2681f7e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fb8f46f1-9a6a-4640-96a8-ebdfd2681f7e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a6217e21-78b0-4be6-a03b-95a4ffe96cbd' class='xr-var-data-in' type='checkbox'><label for='data-a6217e21-78b0-4be6-a03b-95a4ffe96cbd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([5.000e-01, 1.500e+00, 2.500e+00, ..., 5.095e+02, 5.105e+02, 5.115e+02])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 1.5 2.5 ... 509.5 510.5 511.5</div><input id='attrs-6115970f-d78c-499f-9cfa-7e44d71100bf' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6115970f-d78c-499f-9cfa-7e44d71100bf' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-791162a0-207a-47ad-9397-1968c87d2f79' class='xr-var-data-in' type='checkbox'><label for='data-791162a0-207a-47ad-9397-1968c87d2f79' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([5.000e-01, 1.500e+00, 2.500e+00, ..., 5.095e+02, 5.105e+02, 5.115e+02])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-91faa753-6b25-4df3-abc1-85cb2e0a6c31' class='xr-section-summary-in' type='checkbox'  ><label for='section-91faa753-6b25-4df3-abc1-85cb2e0a6c31' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>c</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-7da24bd8-e08a-4840-a8ff-39ec0c2ddfcf' class='xr-index-data-in' type='checkbox'/><label for='index-7da24bd8-e08a-4840-a8ff-39ec0c2ddfcf' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;DAPI&#x27;, &#x27;GFP&#x27;, &#x27;RFP&#x27;], dtype=&#x27;object&#x27;, name=&#x27;c&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-5c3ca662-a8c5-46cc-b935-cf62268a0375' class='xr-index-data-in' type='checkbox'/><label for='index-5c3ca662-a8c5-46cc-b935-cf62268a0375' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.5,   1.5,   2.5,   3.5,   4.5,   5.5,   6.5,   7.5,   8.5,   9.5,\n",
       "       ...\n",
       "       502.5, 503.5, 504.5, 505.5, 506.5, 507.5, 508.5, 509.5, 510.5, 511.5],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=512))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-b4fcc36e-8756-4b28-8c16-1080bc15b9b2' class='xr-index-data-in' type='checkbox'/><label for='index-b4fcc36e-8756-4b28-8c16-1080bc15b9b2' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.5,   1.5,   2.5,   3.5,   4.5,   5.5,   6.5,   7.5,   8.5,   9.5,\n",
       "       ...\n",
       "       502.5, 503.5, 504.5, 505.5, 506.5, 507.5, 508.5, 509.5, 510.5, 511.5],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=512))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a550f005-4e70-40d4-8365-749219beba0c' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a550f005-4e70-40d4-8365-749219beba0c' class='xr-section-summary' >Attributes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>transform :</span></dt><dd>{&#x27;global&#x27;: Identity }</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'image' (c: 3, y: 512, x: 512)> Size: 2MB\n",
       "dask.array<from-zarr, shape=(3, 512, 512), dtype=uint16, chunksize=(3, 512, 512), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * c        (c) <U4 48B 'DAPI' 'GFP' 'RFP'\n",
       "  * y        (y) float64 4kB 0.5 1.5 2.5 3.5 4.5 ... 508.5 509.5 510.5 511.5\n",
       "  * x        (x) float64 4kB 0.5 1.5 2.5 3.5 4.5 ... 508.5 509.5 510.5 511.5\n",
       "Attributes:\n",
       "    transform:  {'global': Identity }"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sdata['IF']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "69fa0c05-e170-47b4-854e-3351dc7a08f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "html[data-theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;image&#x27; (c: 24, y: 944, x: 953)&gt; Size: 86MB\n",
       "dask.array&lt;from-zarr, shape=(24, 944, 953), dtype=float32, chunksize=(24, 944, 953), chunktype=numpy.ndarray&gt;\n",
       "Coordinates:\n",
       "  * c        (c) &lt;U12 1kB &#x27;-&#x27; &#x27;pHH3_S28&#x27; &#x27;-&#x27; &#x27;-&#x27; ... &#x27;PCNA&#x27; &#x27;DNA1&#x27; &#x27;DNA2&#x27; &#x27;-&#x27;\n",
       "  * y        (y) float64 8kB 0.5 1.5 2.5 3.5 4.5 ... 940.5 941.5 942.5 943.5\n",
       "  * x        (x) float64 8kB 0.5 1.5 2.5 3.5 4.5 ... 949.5 950.5 951.5 952.5\n",
       "Attributes:\n",
       "    transform:  {&#x27;global&#x27;: Identity , &#x27;aligned&#x27;: Sequence \\n    Identity \\n  ...</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'image'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>c</span>: 24</li><li><span class='xr-has-index'>y</span>: 944</li><li><span class='xr-has-index'>x</span>: 953</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-c5f4614d-9ee7-40e4-9ce2-31ae64fb148d' class='xr-array-in' type='checkbox' checked><label for='section-c5f4614d-9ee7-40e4-9ce2-31ae64fb148d' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(24, 944, 953), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 82.36 MiB </td>\n",
       "                        <td> 82.36 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (24, 944, 953) </td>\n",
       "                        <td> (24, 944, 953) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 1 chunks in 2 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"197\" height=\"186\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"27\" y2=\"17\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"118\" x2=\"27\" y2=\"136\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"118\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"27\" y2=\"136\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 27.855409649174852,17.855409649174852 27.855409649174852,136.72214627037107 10.0,118.86673662119622\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"130\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"147\" y2=\"17\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"27\" y2=\"17\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"130\" y1=\"0\" x2=\"147\" y2=\"17\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.0,0.0 130.0,0.0 147.85540964917485,17.855409649174852 27.855409649174852,17.855409649174852\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"147\" y2=\"17\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"27\" y1=\"136\" x2=\"147\" y2=\"136\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"27\" y2=\"136\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"147\" y1=\"17\" x2=\"147\" y2=\"136\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"27.855409649174852,17.855409649174852 147.85540964917485,17.855409649174852 147.85540964917485,136.72214627037107 27.855409649174852,136.72214627037107\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"87.855410\" y=\"156.722146\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >953</text>\n",
       "  <text x=\"167.855410\" y=\"77.288778\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,167.855410,77.288778)\">944</text>\n",
       "  <text x=\"8.927705\" y=\"147.794441\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,8.927705,147.794441)\">24</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></div></li><li class='xr-section-item'><input id='section-5ffb1283-00b1-436e-918e-001bfe9ad116' class='xr-section-summary-in' type='checkbox'  checked><label for='section-5ffb1283-00b1-436e-918e-001bfe9ad116' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>c</span></div><div class='xr-var-dims'>(c)</div><div class='xr-var-dtype'>&lt;U12</div><div class='xr-var-preview xr-preview'>&#x27;-&#x27; &#x27;pHH3_S28&#x27; &#x27;-&#x27; ... &#x27;DNA2&#x27; &#x27;-&#x27;</div><input id='attrs-7b7eadf2-ed74-42a7-88b1-8821fec9f5a4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7b7eadf2-ed74-42a7-88b1-8821fec9f5a4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-98c7363b-1117-462e-805e-4285c3b306d4' class='xr-var-data-in' type='checkbox'><label for='data-98c7363b-1117-462e-805e-4285c3b306d4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;-&#x27;, &#x27;pHH3_S28&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;HH3&#x27;, &#x27;p21&#x27;, &#x27;RFP&#x27;,\n",
       "       &#x27;pRb_S807S811&#x27;, &#x27;GFP&#x27;, &#x27;cycB1&#x27;, &#x27;cycE1&#x27;, &#x27;bActin&#x27;, &#x27;pS6_S235S236&#x27;,\n",
       "       &#x27;pmTOR_S2448&#x27;, &#x27;cCASP3&#x27;, &#x27;Ki67&#x27;, &#x27;cycD1&#x27;, &#x27;PCNA&#x27;, &#x27;DNA1&#x27;, &#x27;DNA2&#x27;, &#x27;-&#x27;],\n",
       "      dtype=&#x27;&lt;U12&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 1.5 2.5 ... 941.5 942.5 943.5</div><input id='attrs-fecf897c-c633-46d4-8e1d-568052c783e0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fecf897c-c633-46d4-8e1d-568052c783e0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-33911890-efa1-49bc-a935-d64b54a5cc08' class='xr-var-data-in' type='checkbox'><label for='data-33911890-efa1-49bc-a935-d64b54a5cc08' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([5.000e-01, 1.500e+00, 2.500e+00, ..., 9.415e+02, 9.425e+02, 9.435e+02])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 1.5 2.5 ... 950.5 951.5 952.5</div><input id='attrs-64b8807d-f128-468f-8d26-3665ff39f6e2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-64b8807d-f128-468f-8d26-3665ff39f6e2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ec10d034-6be4-4511-afe4-5f6004680f52' class='xr-var-data-in' type='checkbox'><label for='data-ec10d034-6be4-4511-afe4-5f6004680f52' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([5.000e-01, 1.500e+00, 2.500e+00, ..., 9.505e+02, 9.515e+02, 9.525e+02])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-9a6ccfc6-f3c4-452c-9b1a-e01f2b05b8c7' class='xr-section-summary-in' type='checkbox'  ><label for='section-9a6ccfc6-f3c4-452c-9b1a-e01f2b05b8c7' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>c</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-eb03a319-535d-4c15-bba6-9e3bbe4b9328' class='xr-index-data-in' type='checkbox'/><label for='index-eb03a319-535d-4c15-bba6-9e3bbe4b9328' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;-&#x27;, &#x27;pHH3_S28&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;-&#x27;, &#x27;HH3&#x27;, &#x27;p21&#x27;, &#x27;RFP&#x27;,\n",
       "       &#x27;pRb_S807S811&#x27;, &#x27;GFP&#x27;, &#x27;cycB1&#x27;, &#x27;cycE1&#x27;, &#x27;bActin&#x27;, &#x27;pS6_S235S236&#x27;,\n",
       "       &#x27;pmTOR_S2448&#x27;, &#x27;cCASP3&#x27;, &#x27;Ki67&#x27;, &#x27;cycD1&#x27;, &#x27;PCNA&#x27;, &#x27;DNA1&#x27;, &#x27;DNA2&#x27;, &#x27;-&#x27;],\n",
       "      dtype=&#x27;object&#x27;, name=&#x27;c&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-7562c1db-28cb-4d74-a8d8-7f8261332605' class='xr-index-data-in' type='checkbox'/><label for='index-7562c1db-28cb-4d74-a8d8-7f8261332605' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.5,   1.5,   2.5,   3.5,   4.5,   5.5,   6.5,   7.5,   8.5,   9.5,\n",
       "       ...\n",
       "       934.5, 935.5, 936.5, 937.5, 938.5, 939.5, 940.5, 941.5, 942.5, 943.5],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=944))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-852dcc5d-e629-4c14-aec2-3767e74be86c' class='xr-index-data-in' type='checkbox'/><label for='index-852dcc5d-e629-4c14-aec2-3767e74be86c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.5,   1.5,   2.5,   3.5,   4.5,   5.5,   6.5,   7.5,   8.5,   9.5,\n",
       "       ...\n",
       "       943.5, 944.5, 945.5, 946.5, 947.5, 948.5, 949.5, 950.5, 951.5, 952.5],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=953))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-9a26ab10-d5b8-4997-862b-6a3ee6cf2d31' class='xr-section-summary-in' type='checkbox'  checked><label for='section-9a26ab10-d5b8-4997-862b-6a3ee6cf2d31' class='xr-section-summary' >Attributes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>transform :</span></dt><dd>{&#x27;global&#x27;: Identity , &#x27;aligned&#x27;: Sequence \n",
       "    Identity \n",
       "    Affine (c, y, x -&gt; c, x, y)\n",
       "        [1. 0. 0. 0.]\n",
       "        [ 0.00000000e+00  3.10354772e-03  9.99401782e-01 -4.85164672e+01]\n",
       "        [ 0.00000000e+00  9.99401782e-01 -3.10354772e-03 -4.03882442e+01]\n",
       "        [0. 0. 0. 1.]}</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'image' (c: 24, y: 944, x: 953)> Size: 86MB\n",
       "dask.array<from-zarr, shape=(24, 944, 953), dtype=float32, chunksize=(24, 944, 953), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * c        (c) <U12 1kB '-' 'pHH3_S28' '-' '-' ... 'PCNA' 'DNA1' 'DNA2' '-'\n",
       "  * y        (y) float64 8kB 0.5 1.5 2.5 3.5 4.5 ... 940.5 941.5 942.5 943.5\n",
       "  * x        (x) float64 8kB 0.5 1.5 2.5 3.5 4.5 ... 949.5 950.5 951.5 952.5\n",
       "Attributes:\n",
       "    transform:  {'global': Identity , 'aligned': Sequence \\n    Identity \\n  ..."
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sdata['IMC']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6e99e028",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'IF': <xarray.DataArray 'image' (c: 3, y: 512, x: 512)> Size: 2MB\n",
       "dask.array<from-zarr, shape=(3, 512, 512), dtype=uint16, chunksize=(3, 512, 512), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * c        (c) <U4 48B 'DAPI' 'GFP' 'RFP'\n",
       "  * y        (y) float64 4kB 0.5 1.5 2.5 3.5 4.5 ... 508.5 509.5 510.5 511.5\n",
       "  * x        (x) float64 4kB 0.5 1.5 2.5 3.5 4.5 ... 508.5 509.5 510.5 511.5\n",
       "Attributes:\n",
       "    transform:  {'global': Identity }, 'IMC': <xarray.DataArray 'image' (c: 24, y: 944, x: 953)> Size: 86MB\n",
       "dask.array<from-zarr, shape=(24, 944, 953), dtype=float32, chunksize=(24, 944, 953), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * c        (c) <U12 1kB '-' 'pHH3_S28' '-' '-' ... 'PCNA' 'DNA1' 'DNA2' '-'\n",
       "  * y        (y) float64 8kB 0.5 1.5 2.5 3.5 4.5 ... 940.5 941.5 942.5 943.5\n",
       "  * x        (x) float64 8kB 0.5 1.5 2.5 3.5 4.5 ... 949.5 950.5 951.5 952.5\n",
       "Attributes:\n",
       "    transform:  {'global': Identity , 'aligned': Sequence \\n    Identity \\n  ...}"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sdata.images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9e07845a",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Run optimization to find the best registration parameters"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f343b9cf-825c-43f9-a804-79f753bc5008",
   "metadata": {},
   "source": [
    "We will register using nuclear channels: DAPI and DNA1/DNA2 respectively. All channels with matching names to the list will be summed along the channel axis to create the registration image. That is: DAPI will be registered to the DNA1+DNA2 signal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "fd526ea6-b4f9-40bf-9f94-1cc0abc30174",
   "metadata": {},
   "outputs": [],
   "source": [
    "registration_channels = ['DAPI', 'DNA1', 'DNA2']\n",
    "correlation_channels = ['GFP', 'RFP']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c5eb302-441f-4e7e-857b-007892fb23bd",
   "metadata": {},
   "source": [
    "The resolution of the IF image (1.714um/px) is different from the IMC (1um/px)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "20b374ee-9245-4ecc-92bd-6ca7201f28e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2025-05-29 23:10:04,287] A new study created in memory with name: example_1\n"
     ]
    }
   ],
   "source": [
    "study = optuna.create_study(direction='maximize', study_name=\"example_1\", sampler=optuna.samplers.TPESampler(seed=435))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0b6811ca-ee71-4046-83b7-6038a8858a2a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2025-05-29 23:13:54,857] Trial 74 finished with value: 0.606051768526489 and parameters: {'IF_binarization_threshold': 0.023051918423522826, 'IF_gaussian_sigma': 0.41492083084960785, 'IMC_arcsinh_normalize': False, 'IMC_arcsinh_cofactor': 74.46447442086576, 'IMC_winsorization_lower_limit': 0.18333427749576028, 'IMC_winsorization_upper_limit': 0.0615777624518764, 'IMC_binarization_threshold': 0.4132098146518948, 'IMC_gaussian_sigma': 2.359809325254669, 'binarize_images': True, 'registration_max_features': 100000, 'registration_percentile': 0.9, 'moving_image': 'IMC', 'static_image': 'IF'}. Best is trial 69 with value: 0.7170164860003657.\n"
     ]
    }
   ],
   "source": [
    "study.optimize(lambda trial: iou_corr_single_objective(trial, sdata, registration_channels, correlation_channels), n_trials=100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4277b75",
   "metadata": {},
   "source": [
    "## Pick best trial"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0eceefcc",
   "metadata": {},
   "source": [
    "We can checkout the parameters selected for the best trial\n",
    "Twocan suggests the best trial based on the balanced score, this is not necessarily the same trial as that which maximizes the optimization objectives: this can be extracted with the optuna method `study.best_trial`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "454a6852",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "FrozenTrial(number=69, state=TrialState.COMPLETE, values=[0.7170164860003657], datetime_start=datetime.datetime(2025, 5, 29, 23, 12, 54, 828782), datetime_complete=datetime.datetime(2025, 5, 29, 23, 12, 57, 353228), params={'IF_binarization_threshold': 0.03434665503816838, 'IF_gaussian_sigma': 0.1625850872389713, 'IMC_arcsinh_normalize': False, 'IMC_arcsinh_cofactor': 90.71740690650462, 'IMC_winsorization_lower_limit': 0.19916139257481844, 'IMC_winsorization_upper_limit': 0.07038754802100661, 'IMC_binarization_threshold': 0.4135779100577611, 'IMC_gaussian_sigma': 1.9252828823481996, 'binarize_images': True, 'registration_max_features': 100000, 'registration_percentile': 0.9, 'moving_image': 'IMC', 'static_image': 'IF'}, user_attrs={'registration_matrix': array([[ 5.81153556e-01,  2.49409559e-03, -2.82827661e+01],\n",
      "       [-2.49409559e-03,  5.81153556e-01, -2.25687258e+01]]), 'source_sum': 29134, 'target_sum': 27733, 'logical_and': 25600, 'logical_or': 31267, 'logical_xor': 5667, 'logical_iou': 0.8187545974989605, 'stack_image_max_corr': 0.8758872747421265, 'reg_image_max_corr': 0.8757404088973999, 'corr_image_max_corr': 0.7689441442489624, 'stack_cell_max_corr': 0.7797222, 'reg_cell_max_corr': 0.77972084, 'corr_cell_max_corr': 0.35944554}, system_attrs={}, intermediate_values={}, distributions={'IF_binarization_threshold': FloatDistribution(high=1.0, log=False, low=0.0, step=None), 'IF_gaussian_sigma': FloatDistribution(high=5.0, log=False, low=0.0, step=None), 'IMC_arcsinh_normalize': CategoricalDistribution(choices=(True, False)), 'IMC_arcsinh_cofactor': FloatDistribution(high=100.0, log=False, low=1.0, step=None), 'IMC_winsorization_lower_limit': FloatDistribution(high=0.2, log=False, low=0.0, step=None), 'IMC_winsorization_upper_limit': FloatDistribution(high=0.2, log=False, low=0.0, step=None), 'IMC_binarization_threshold': FloatDistribution(high=1.0, log=False, low=0.0, step=None), 'IMC_gaussian_sigma': FloatDistribution(high=5.0, log=False, low=0.0, step=None), 'binarize_images': CategoricalDistribution(choices=(True,)), 'registration_max_features': CategoricalDistribution(choices=(100000,)), 'registration_percentile': CategoricalDistribution(choices=(0.9,)), 'moving_image': CategoricalDistribution(choices=('IMC',)), 'static_image': CategoricalDistribution(choices=('IF',))}, trial_id=69, value=None)\n"
     ]
    }
   ],
   "source": [
    "optuna_best_trial = study.best_trial\n",
    "print(optuna_best_trial)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "643c0369",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number                                                                                 69\n",
      "value                                                                            0.717016\n",
      "datetime_start                                                 2025-05-29 23:12:54.828782\n",
      "datetime_complete                                              2025-05-29 23:12:57.353228\n",
      "duration                                                           0 days 00:00:02.524446\n",
      "params_IF_binarization_threshold                                                 0.034347\n",
      "params_IF_gaussian_sigma                                                         0.162585\n",
      "params_IMC_arcsinh_cofactor                                                     90.717407\n",
      "params_IMC_arcsinh_normalize                                                        False\n",
      "params_IMC_binarization_threshold                                                0.413578\n",
      "params_IMC_gaussian_sigma                                                        1.925283\n",
      "params_IMC_winsorization_lower_limit                                             0.199161\n",
      "params_IMC_winsorization_upper_limit                                             0.070388\n",
      "params_binarize_images                                                               True\n",
      "params_moving_image                                                                   IMC\n",
      "params_registration_max_features                                                 100000.0\n",
      "params_registration_percentile                                                        0.9\n",
      "params_static_image                                                                    IF\n",
      "user_attrs_corr_cell_max_corr                                                    0.359446\n",
      "user_attrs_corr_image_max_corr                                                   0.768944\n",
      "user_attrs_logical_and                                                            25600.0\n",
      "user_attrs_logical_iou                                                           0.818755\n",
      "user_attrs_logical_or                                                             31267.0\n",
      "user_attrs_logical_xor                                                             5667.0\n",
      "user_attrs_prop_source_covered                                                        NaN\n",
      "user_attrs_prop_target_covered                                                        NaN\n",
      "user_attrs_reg_cell_max_corr                                                     0.779721\n",
      "user_attrs_reg_image_max_corr                                                     0.87574\n",
      "user_attrs_registration_matrix          [[0.5811535559367804, 0.002494095593971871, -2...\n",
      "user_attrs_source_sum                                                             29134.0\n",
      "user_attrs_stack_cell_max_corr                                                   0.779722\n",
      "user_attrs_stack_image_max_corr                                                  0.875887\n",
      "user_attrs_target_sum                                                             27733.0\n",
      "state                                                                            COMPLETE\n",
      "norm_and                                                                          0.98298\n",
      "norm_iou                                                                              1.0\n",
      "norm_corr                                                                             1.0\n",
      "balanced_score                                                                   0.988653\n",
      "Name: 69, dtype: object\n"
     ]
    }
   ],
   "source": [
    "twocan_best_trial = pick_best_registration(study.trials_dataframe())\n",
    "print(twocan_best_trial)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91fe8f62",
   "metadata": {},
   "source": [
    "We can also check out the registration matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bef9bdff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[  0.58,   0.  , -28.28],\n",
       "       [ -0.  ,   0.58, -22.57]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "twocan_best_trial['user_attrs_registration_matrix'].round(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ca9079d",
   "metadata": {},
   "source": [
    "## Visualize result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "08883561",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(20, 6))\n",
    "plot_registration(sdata['IF'], sdata['IMC'], twocan_best_trial['user_attrs_registration_matrix'])\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "twocan",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
